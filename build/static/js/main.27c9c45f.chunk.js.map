{"version":3,"sources":["components/Navbar.js","components/CartItem.js","action.js","components/CartContainer.js","reducers/reducer.js","cart-items.js","App.js","index.js"],"names":["connect","state","amount","className","xmlns","viewBox","d","dispatch","ownProps","id","remove","type","payload","increase","decrease","toggle","img","title","price","src","alt","onClick","cart","total","React","useEffect","length","map","item","key","initialStore","reducer","action","tempCart1","filter","cartItem","tempCart","reduce","cartTotal","itemTotal","parseFloat","toFixed","store","createStore","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27c9c45f.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from 'react-redux'\nconst Navbar = ({amount}) => {\n  return (\n    <nav>\n      <div className=\"nav-center\">\n        <h3>ReduxGear</h3>\n        <div className=\"nav-container\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n            <path d=\"M16 6v2h2l2 12H0L2 8h2V6a6 6 0 1 1 12 0zm-2 0a4 4 0 1 0-8 0v2h8V6zM4 10v2h2v-2H4zm10 0v2h2v-2h-2z\" />\n          </svg>\n          <div className=\"amount-container\">\n            <p className=\"total-amount\">{amount}</p>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nconst mapStateToProps = state => {\n  return { amount: state.amount }\n}\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from \"react\";\nimport {connect} from 'react-redux'\nimport { INCREASE, DECREASE, REMOVE, TOGGLE_AMOUNT } from '../action'\n\nconst CartItem = ({ \n  img,\n  title, \n  price, \n  amount, \n  remove, \n  increase, \n  decrease,\n  toggle\n}) => {\n  return (\n    <div className=\"cart-item\">\n      <img src={img} alt={title} />\n      <div>\n        <h4>{title}</h4>\n        <h4 className=\"item-price\">${price}</h4>\n        {/* remove button */}\n        <button className=\"remove-btn\" onClick={() => remove()}>remove</button>\n      </div>\n      <div>\n        {/* increase amount */}\n        <button className=\"amount-btn\" onClick={() => toggle('inc')}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n            <path d=\"M10.707 7.05L10 6.343 4.343 12l1.414 1.414L10 9.172l4.243 4.242L15.657 12z\" />\n          </svg>\n        </button>\n        {/* amount */}\n        <p className=\"amount\">{amount}</p>\n        {/* decrease amount */}\n        <button className=\"amount-btn\" onClick={() => toggle('dec')}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n            <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const { id, amount } = ownProps\n\n  return {\n    remove: () => dispatch({ type: REMOVE, payload: {id: id}  }),\n    increase: () => dispatch({type: INCREASE, payload: {id}}),\n    decrease: () => dispatch({type: DECREASE, payload: {id, amount} }),\n    toggle: (toggle) => dispatch({type: TOGGLE_AMOUNT,payload:{id, toggle}})\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(CartItem);\n","export const DECREASE = 'DECREASE'\nexport const INCREASE = 'INCREASE'\nexport const REMOVE = 'REMOVE'\nexport const CLEAR_CART = 'CLEAR_CART'\nexport const GET_TOTALS = 'GET_TOTALS'\nexport const TOGGLE_AMOUNT = 'TOGGLE_AMOUNT'\n\n// export const removeItem = id => {\n//     return { type: REMOVE, payload: {id}}\n// }","import React from \"react\";\nimport CartItem from \"./CartItem\";\nimport { connect } from \"react-redux\";\nimport { CLEAR_CART, GET_TOTALS } from './../action'\nconst CartContainer = ({ cart = [], total, dispatch }) => {\n  React.useEffect(() => {\n    dispatch({type: GET_TOTALS})\n  })\n  if (cart.length === 0) {\n    return (\n      <section className=\"cart\">\n        {/* cart header */}\n        <header>\n          <h2>your bag</h2>\n          <h4 className=\"empty-cart\">is currently empty</h4>\n        </header>\n      </section>\n    );\n  }\n  return (\n    <section className=\"cart\">\n      {/* cart header */}\n      <header>\n        <h2>your bag</h2>\n      </header>\n      {/* cart items */}\n      <article>\n        {cart.map(item => {\n          return <CartItem key={item.id} {...item} />;\n        })}\n      </article>\n      {/* cart footer */}\n      <footer>\n        <hr />\n        <div className=\"cart-total\">\n          <h4>\n            total <span>${total}</span>\n          </h4>\n        </div>\n        <button className=\"btn clear-btn\" onClick={() => dispatch({type: CLEAR_CART})}>clear cart</button>\n      </footer>\n    </section>\n  );\n};\n\nconst mapStateToProps = state => {\n  const { cart, total } = state\n  return { cart, total}\n}\n\nexport default connect(mapStateToProps)(CartContainer);\n","import { \n    DECREASE, \n    INCREASE, \n    CLEAR_CART, \n    REMOVE, \n    GET_TOTALS,\n    TOGGLE_AMOUNT\n} from '../action'\n// items\nimport cartItems from \"./../cart-items\";\n\n//initial store\nconst initialStore = {\n    cart: cartItems,\n    total: 0,\n    amount: 0\n  }\n\nconst reducer = ( state = initialStore, action) => {\n    switch(action.type){\n        case DECREASE:\n            let tempCart1 = [];\n            if(action.payload.amount === 1){\n                tempCart1 = state.cart.filter((cartItem) => cartItem.id !== action.payload.id)           \n            } \n                else {\n                tempCart1 = state.cart.map((cartItem) => {\n                    if(cartItem.id === action.payload.id){\n                        cartItem = {...cartItem, amount: cartItem.amount - 1}\n                    }\n                    return cartItem\n                })\n            }\n            return {...state, cart: tempCart1 }\n        case INCREASE:\n            let tempCart = state.cart.map((cartItem) => {\n                if(cartItem.id === action.payload.id){\n                    cartItem = {...cartItem, amount: cartItem.amount + 1}\n                }\n                return cartItem\n            })\n            return {...state, cart: tempCart}\n        case CLEAR_CART:\n            return {...state, cart: []}\n        case REMOVE:\n            return {...state, cart: state.cart.filter((cartItem) => cartItem.id !== action.payload.id)}\n        case GET_TOTALS: \n            let { total, amount } = state.cart.reduce((cartTotal, cartItem) => {\n                const { price, amount} = cartItem;\n                const itemTotal = price * amount\n\n                cartTotal.total += itemTotal\n\n                cartTotal.amount += amount;\n                return cartTotal\n            },{\n                total: 0,\n                amount: 0\n            });\n            total = parseFloat(total.toFixed(2))\n            return {...state, total, amount}\n        case TOGGLE_AMOUNT:\n            return {...state, cart: state.cart.map(cartItem => {\n                if(cartItem.id === action.payload.id){\n                    if(action.payload.toggle === 'inc'){\n                        return cartItem = {...cartItem, amount: cartItem.amount + 1}\n                    } else if(action.payload.toggle === 'dec'){\n                        return cartItem = {...cartItem, amount: cartItem.amount - 1}\n                    }\n                }\n                return cartItem\n            })}\n        default:\n            return state\n    }\n}\n\nexport default reducer","export default [\n  {\n    id: 1,\n    title: \"Samsung Galaxy S7\",\n    price: 599.99,\n    img:\n      \"https://res.cloudinary.com/diqqf3eq2/image/upload/v1583368215/phone-2_ohtt5s.png\",\n    amount: 1\n  },\n  {\n    id: 2,\n    title: \"google pixel \",\n    price: 499.99,\n    img:\n      \"https://res.cloudinary.com/diqqf3eq2/image/upload/v1583371867/phone-1_gvesln.png\",\n    amount: 1\n  },\n  {\n    id: 3,\n    title: \"Xiaomi Redmi Note 2\",\n    price: 699.99,\n    img:\n      \"https://res.cloudinary.com/diqqf3eq2/image/upload/v1583368224/phone-3_h2s6fo.png\",\n    amount: 1\n  }\n];\n","import React from \"react\";\n// components\nimport Navbar from \"./components/Navbar\";\nimport CartContainer from \"./components/CartContainer\";\n\n// redux stuff\nimport { createStore } from 'redux'\nimport  reducer  from './reducers/reducer'\n\n// react-redux - Provider - wraps app, connect - used in components\nimport { Provider } from 'react-redux'\n\n\n// store.getState() da dobijemo objekat state\n\n\n\n\nconst store = createStore(reducer);\n\n\n\nfunction App() {\n  // cart setup\n\n  return (\n    <Provider store = {store}>\n      <Navbar/>\n      <CartContainer  />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}