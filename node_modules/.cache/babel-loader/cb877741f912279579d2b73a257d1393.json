{"ast":null,"code":"import { DECREASE, INCREASE, CLEAR_CART, REMOVE } from '../action';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case DECREASE:\n      return { ...state,\n        count: state.count - 1\n      };\n\n    case INCREASE:\n      let tempCart = state.cart.map(cartItem => {\n        if (cart) return cartItem;\n      });\n      return { ...state,\n        cart: tempCart\n      };\n\n    case CLEAR_CART:\n      return { ...state,\n        cart: []\n      };\n\n    case REMOVE:\n      return { ...state,\n        cart: state.cart.filter(cartItem => cartItem.id !== action.payload.id)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/rilex/redux-cart/src/reducers/reducer.js"],"names":["DECREASE","INCREASE","CLEAR_CART","REMOVE","reducer","state","action","type","count","tempCart","cart","map","cartItem","filter","id","payload"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,QAAnB,EAA6BC,UAA7B,EAAyCC,MAAzC,QAAuD,WAAvD;;AAEA,MAAMC,OAAO,GAAG,CAAEC,KAAF,EAASC,MAAT,KAAoB;AAChC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,QAAL;AACI,aAAO,EAAC,GAAGK,KAAJ;AAAWG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAc;AAAhC,OAAP;;AACJ,SAAKP,QAAL;AACI,UAAIQ,QAAQ,GAAGJ,KAAK,CAACK,IAAN,CAAWC,GAAX,CAAgBC,QAAD,IAAc;AACxC,YAAGF,IAAH,EACA,OAAOE,QAAP;AACH,OAHc,CAAf;AAIA,aAAO,EAAC,GAAGP,KAAJ;AAAWK,QAAAA,IAAI,EAAED;AAAjB,OAAP;;AACJ,SAAKP,UAAL;AACI,aAAO,EAAC,GAAGG,KAAJ;AAAWK,QAAAA,IAAI,EAAE;AAAjB,OAAP;;AACJ,SAAKP,MAAL;AACI,aAAO,EAAC,GAAGE,KAAJ;AAAWK,QAAAA,IAAI,EAAEL,KAAK,CAACK,IAAN,CAAWG,MAAX,CAAmBD,QAAD,IAAcA,QAAQ,CAACE,EAAT,KAAgBR,MAAM,CAACS,OAAP,CAAeD,EAA/D;AAAjB,OAAP;;AACJ;AACI,aAAOT,KAAP;AAdR;AAgBH,CAjBD;;AAmBA,eAAeD,OAAf","sourcesContent":["import { DECREASE, INCREASE, CLEAR_CART, REMOVE } from '../action'\n\nconst reducer = ( state, action) => {\n    switch(action.type){\n        case DECREASE:\n            return {...state, count: state.count - 1}\n        case INCREASE:\n            let tempCart = state.cart.map((cartItem) => {\n                if(cart)\n                return cartItem\n            })\n            return {...state, cart: tempCart}\n        case CLEAR_CART:\n            return {...state, cart: []}\n        case REMOVE:\n            return {...state, cart: state.cart.filter((cartItem) => cartItem.id !== action.payload.id)}\n        default:\n            return state\n    }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}