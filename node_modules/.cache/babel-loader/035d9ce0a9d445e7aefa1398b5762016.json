{"ast":null,"code":"// import { \n//     DECREASE, \n//     INCREASE, \n//     CLEAR_CART, \n//     REMOVE, \n//     GET_TOTALS,\n//     TOGGLE_AMOUNT\n// } from '../action'\n// items\nimport cartItems from \"./../cart-items\"; //initial store\n\nconst initialStore = {\n  cart: cartItems,\n  total: 0,\n  amount: 0\n};\n\nconst reducer = (state = initialStore, action) => {\n  switch (action.type) {\n    case DECREASE:\n      let tempCart1 = [];\n\n      if (action.payload.amount === 1) {\n        tempCart1 = state.cart.filter(cartItem => cartItem.id !== action.payload.id);\n      } else {\n        tempCart1 = state.cart.map(cartItem => {\n          if (cartItem.id === action.payload.id) {\n            cartItem = { ...cartItem,\n              amount: cartItem.amount - 1\n            };\n          }\n\n          return cartItem;\n        });\n      }\n\n      return { ...state,\n        cart: tempCart1\n      };\n\n    case INCREASE:\n      let tempCart = state.cart.map(cartItem => {\n        if (cartItem.id === action.payload.id) {\n          cartItem = { ...cartItem,\n            amount: cartItem.amount + 1\n          };\n        }\n\n        return cartItem;\n      });\n      return { ...state,\n        cart: tempCart\n      };\n\n    case CLEAR_CART:\n      return { ...state,\n        cart: []\n      };\n\n    case REMOVE:\n      return { ...state,\n        cart: state.cart.filter(cartItem => cartItem.id !== action.payload.id)\n      };\n\n    case GET_TOTALS:\n      let {\n        total,\n        amount\n      } = state.cart.reduce((cartTotal, cartItem) => {\n        const {\n          price,\n          amount\n        } = cartItem;\n        const itemTotal = price * amount;\n        cartTotal.total += itemTotal;\n        cartTotal.amount += amount;\n        return cartTotal;\n      }, {\n        total: 0,\n        amount: 0\n      });\n      total = parseFloat(total.toFixed(2));\n      return { ...state,\n        total,\n        amount\n      };\n\n    case TOGGLE_AMOUNT:\n      return { ...state,\n        cart: state.cart.map(cartItem => {\n          if (cartItem.id === action.payload.id) {\n            if (action.payload.toggle === 'inc') {\n              return cartItem = { ...cartItem,\n                amount: cartItem.amount + 1\n              };\n            } else if (action.payload.toggle === 'dec') {\n              return cartItem = { ...cartItem,\n                amount: cartItem.amount - 1\n              };\n            }\n          }\n\n          return cartItem;\n        })\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/rilex/redux-cart/src/reducers/reducer.js"],"names":["cartItems","initialStore","cart","total","amount","reducer","state","action","type","DECREASE","tempCart1","payload","filter","cartItem","id","map","INCREASE","tempCart","CLEAR_CART","REMOVE","GET_TOTALS","reduce","cartTotal","price","itemTotal","parseFloat","toFixed","TOGGLE_AMOUNT","toggle"],"mappings":"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","sourcesContent":["// import { \n//     DECREASE, \n//     INCREASE, \n//     CLEAR_CART, \n//     REMOVE, \n//     GET_TOTALS,\n//     TOGGLE_AMOUNT\n// } from '../action'\n// items\nimport cartItems from \"./../cart-items\";\n\n//initial store\nconst initialStore = {\n    cart: cartItems,\n    total: 0,\n    amount: 0\n  }\n\nconst reducer = ( state = initialStore, action) => {\n    switch(action.type){\n        case DECREASE:\n            let tempCart1 = [];\n            if(action.payload.amount === 1){\n                tempCart1 = state.cart.filter((cartItem) => cartItem.id !== action.payload.id)           \n            } \n                else {\n                tempCart1 = state.cart.map((cartItem) => {\n                    if(cartItem.id === action.payload.id){\n                        cartItem = {...cartItem, amount: cartItem.amount - 1}\n                    }\n                    return cartItem\n                })\n            }\n            return {...state, cart: tempCart1 }\n        case INCREASE:\n            let tempCart = state.cart.map((cartItem) => {\n                if(cartItem.id === action.payload.id){\n                    cartItem = {...cartItem, amount: cartItem.amount + 1}\n                }\n                return cartItem\n            })\n            return {...state, cart: tempCart}\n        case CLEAR_CART:\n            return {...state, cart: []}\n        case REMOVE:\n            return {...state, cart: state.cart.filter((cartItem) => cartItem.id !== action.payload.id)}\n        case GET_TOTALS: \n            let { total, amount } = state.cart.reduce((cartTotal, cartItem) => {\n                const { price, amount} = cartItem;\n                const itemTotal = price * amount\n\n                cartTotal.total += itemTotal\n\n                cartTotal.amount += amount;\n                return cartTotal\n            },{\n                total: 0,\n                amount: 0\n            });\n            total = parseFloat(total.toFixed(2))\n            return {...state, total, amount}\n        case TOGGLE_AMOUNT:\n            return {...state, cart: state.cart.map(cartItem => {\n                if(cartItem.id === action.payload.id){\n                    if(action.payload.toggle === 'inc'){\n                        return cartItem = {...cartItem, amount: cartItem.amount + 1}\n                    } else if(action.payload.toggle === 'dec'){\n                        return cartItem = {...cartItem, amount: cartItem.amount - 1}\n                    }\n                }\n                return cartItem\n            })}\n        default:\n            return state\n    }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}